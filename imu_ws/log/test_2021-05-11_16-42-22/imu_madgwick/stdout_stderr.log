UpdateCTestConfiguration  from :/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/CTestConfiguration.ini
Parse Config file:/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/CTestConfiguration.ini
   Site: jalil
   Build name: (empty)
 Add coverage exclude regular expressions.
SetCTestConfiguration:CMakeCommand:/usr/bin/cmake
Create new tag: 20210511-0942 - Experimental
UpdateCTestConfiguration  from :/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/CTestConfiguration.ini
Parse Config file:/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/CTestConfiguration.ini
Test project /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 1
    Start 1: copyright

1: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/copyright.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_copyright/copyright.txt" "--command" "/opt/ros/foxy/bin/ament_copyright" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/copyright.xunit.xml"
1: Test timeout computed to be: 60
1: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
1:  - /opt/ros/foxy/bin/ament_copyright --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/copyright.xunit.xml
1: include/imu_madgwick/imu.hpp: could not find copyright notice
1: include/imu_madgwick/imu_filter.hpp: could not find copyright notice
1: include/imu_madgwick/stateless_orientation.hpp: could not find copyright notice
1: include/imu_madgwick/world_frame.hpp: could not find copyright notice
1: src/imu_madgwick/imu.cpp: could not find copyright notice
1: src/imu_madgwick/imu_filter.cpp: could not find copyright notice
1: src/imu_madgwick/stateless_orientation.cpp: could not find copyright notice
1: 7 errors, checked 7 files
1: -- run_test.py: return code 1
1: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/copyright.xunit.xml'
1/6 Test #1: copyright ........................***Failed    0.93 sec
test 2
    Start 2: cppcheck

2: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cppcheck.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/foxy/bin/ament_cppcheck" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cppcheck.xunit.xml" "--include_dirs" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/Boost::system" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/Boost::thread"
2: Test timeout computed to be: 300
2: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
2:  - /opt/ros/foxy/bin/ament_cppcheck --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cppcheck.xunit.xml --include_dirs /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/Boost::system /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/Boost::thread
2: No problems found
2: -- run_test.py: return code 0
2: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cppcheck.xunit.xml'
2/6 Test #2: cppcheck .........................   Passed    0.92 sec
test 3
    Start 3: cpplint

3: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cpplint.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_cpplint/cpplint.txt" "--command" "/opt/ros/foxy/bin/ament_cpplint" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cpplint.xunit.xml"
3: Test timeout computed to be: 120
3: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
3:  - /opt/ros/foxy/bin/ament_cpplint --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cpplint.xunit.xml
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:25:  #ifndef header guard has wrong style, please use: IMU_MADGWICK__IMU_HPP_  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:65:  #endif line should be "#endif  // IMU_MADGWICK__IMU_HPP_"  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:33:  Found C system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:34:  Found C system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:35:  Found C system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:39:  Found C++ system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:40:  Found C++ system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:41:  Found C++ system header after other header. Should be: imu.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:46:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp:65:  At least two spaces is best between code and comments  [whitespace/comments] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp:25:  #ifndef header guard has wrong style, please use: IMU_MADGWICK__IMU_FILTER_HPP_  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp:107:  #endif line should be "#endif  // IMU_MADGWICK__IMU_FILTER_HPP_"  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp:35:  Do not leave a blank line after "public:"  [whitespace/blank_line] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp:47:  At least two spaces is best between code and comments  [whitespace/comments] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp:107:  At least two spaces is best between code and comments  [whitespace/comments] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/stateless_orientation.hpp:25:  #ifndef header guard has wrong style, please use: IMU_MADGWICK__STATELESS_ORIENTATION_HPP_  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/stateless_orientation.hpp:48:  #endif line should be "#endif  // IMU_MADGWICK__STATELESS_ORIENTATION_HPP_"  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/stateless_orientation.hpp:45:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/stateless_orientation.hpp:48:  At least two spaces is best between code and comments  [whitespace/comments] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/world_frame.hpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/world_frame.hpp:1:  #ifndef header guard has wrong style, please use: IMU_MADGWICK__WORLD_FRAME_HPP_  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/world_frame.hpp:8:  #endif line should be "#endif  // IMU_MADGWICK__WORLD_FRAME_HPP_"  [build/header_guard] [5]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp:47:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp:69:  Lines should be <= 100 characters long  [whitespace/line_length] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp:103:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp:104:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp:138:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:26:  Found C system header after C++ system header. Should be: imu_filter.h, c system, c++ system, other.  [build/include_order] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:126:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:160:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:185:  Lines should be <= 100 characters long  [whitespace/line_length] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:192:  Lines should be <= 100 characters long  [whitespace/line_length] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:212:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:219:  Missing space after ,  [whitespace/comma] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:243:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp:269:  Lines should be <= 100 characters long  [whitespace/line_length] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/stateless_orientation.cpp:49:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/stateless_orientation.cpp:58:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
3: /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/stateless_orientation.cpp:152:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
3: Category 'build/header_guard' errors found: 8
3: Category 'build/include_order' errors found: 7
3: Category 'legal/copyright' errors found: 1
3: Category 'runtime/explicit' errors found: 1
3: Category 'whitespace/blank_line' errors found: 7
3: Category 'whitespace/comma' errors found: 6
3: Category 'whitespace/comments' errors found: 4
3: Category 'whitespace/line_length' errors found: 4
3: Category 'whitespace/newline' errors found: 1
3: Total errors found: 39
3: Using '--root=/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include' argument
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu.hpp
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/imu_filter.hpp
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/stateless_orientation.hpp
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/include/imu_madgwick/world_frame.hpp
3: 
3: Using '--root=/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src' argument
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu.cpp
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/imu_filter.cpp
3: 
3: Done processing /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick/src/imu_madgwick/stateless_orientation.cpp
3: 
3: -- run_test.py: return code 1
3: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/cpplint.xunit.xml'
3/6 Test #3: cpplint ..........................***Failed    1.31 sec
test 4
    Start 4: lint_cmake

4: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/lint_cmake.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/foxy/bin/ament_lint_cmake" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/lint_cmake.xunit.xml"
4: Test timeout computed to be: 60
4: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
4:  - /opt/ros/foxy/bin/ament_lint_cmake --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/lint_cmake.xunit.xml
4: 
4: No problems found
4: -- run_test.py: return code 0
4: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/lint_cmake.xunit.xml'
4/6 Test #4: lint_cmake .......................   Passed    0.75 sec
test 5
    Start 5: uncrustify

5: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/uncrustify.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/foxy/bin/ament_uncrustify" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/uncrustify.xunit.xml"
5: Test timeout computed to be: 60
5: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
5:  - /opt/ros/foxy/bin/ament_uncrustify --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/uncrustify.xunit.xml
5: Code style divergence in file 'include/imu_madgwick/imu_filter.hpp':
5: 
5: --- include/imu_madgwick/imu_filter.hpp
5: +++ include/imu_madgwick/imu_filter.hpp.uncrustify
5: @@ -34 +34,3 @@
5: -  public:
5: +public:
5: +  ImuFilter();
5: +  virtual ~ImuFilter();
5: @@ -36,2 +38,5 @@
5: -    ImuFilter();
5: -    virtual ~ImuFilter();
5: +private:
5: +  // **** paramaters
5: +  double gain_;      // algorithm gain
5: +  double zeta_;      // gyro drift bias gain
5: +  WorldFrame::WorldFrame world_frame_;      // NWU, ENU, NED
5: @@ -39,9 +44,3 @@
5: -  private:
5: -    // **** paramaters
5: -    double gain_;    // algorithm gain
5: -    double zeta_;    // gyro drift bias gain
5: -    WorldFrame::WorldFrame world_frame_;    // NWU, ENU, NED
5: -
5: -    // **** state variables
5: -    double q0, q1, q2, q3;  // quaternion
5: -    float w_bx_, w_by_, w_bz_; //
5: +  // **** state variables
5: +  double q0, q1, q2, q3;    // quaternion
5: +  float w_bx_, w_by_, w_bz_;   //
5: @@ -50,4 +49,4 @@
5: -    void setAlgorithmGain(double gain)
5: -    {
5: -        gain_ = gain;
5: -    }
5: +  void setAlgorithmGain(double gain)
5: +  {
5: +    gain_ = gain;
5: +  }
5: @@ -55,4 +54,4 @@
5: -    void setDriftBiasGain(double zeta)
5: -    {
5: -        zeta_ = zeta;
5: -    }
5: +  void setDriftBiasGain(double zeta)
5: +  {
5: +    zeta_ = zeta;
5: +  }
5: @@ -60,4 +59,4 @@
5: -    void setWorldFrame(WorldFrame::WorldFrame frame)
5: -    {
5: -        world_frame_ = frame;
5: -    }
5: +  void setWorldFrame(WorldFrame::WorldFrame frame)
5: +  {
5: +    world_frame_ = frame;
5: +  }
5: @@ -65,6 +64,6 @@
5: -    void getOrientation(double& q0, double& q1, double& q2, double& q3)
5: -    {
5: -        q0 = this->q0;
5: -        q1 = this->q1;
5: -        q2 = this->q2;
5: -        q3 = this->q3;
5: +  void getOrientation(double & q0, double & q1, double & q2, double & q3)
5: +  {
5: +    q0 = this->q0;
5: +    q1 = this->q1;
5: +    q2 = this->q2;
5: +    q3 = this->q3;
5: @@ -72,9 +71,9 @@
5: -        // perform precise normalization of the output, using 1/sqrt()
5: -        // instead of the fast invSqrt() approximation. Without this,
5: -        // TF2 complains that the quaternion is not normalized.
5: -        double recipNorm = 1 / sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
5: -        q0 *= recipNorm;
5: -        q1 *= recipNorm;
5: -        q2 *= recipNorm;
5: -        q3 *= recipNorm;
5: -    }
5: +    // perform precise normalization of the output, using 1/sqrt()
5: +    // instead of the fast invSqrt() approximation. Without this,
5: +    // TF2 complains that the quaternion is not normalized.
5: +    double recipNorm = 1 / sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
5: +    q0 *= recipNorm;
5: +    q1 *= recipNorm;
5: +    q2 *= recipNorm;
5: +    q3 *= recipNorm;
5: +  }
5: @@ -82,6 +81,6 @@
5: -    void setOrientation(double q0, double q1, double q2, double q3)
5: -    {
5: -        this->q0 = q0;
5: -        this->q1 = q1;
5: -        this->q2 = q2;
5: -        this->q3 = q3;
5: +  void setOrientation(double q0, double q1, double q2, double q3)
5: +  {
5: +    this->q0 = q0;
5: +    this->q1 = q1;
5: +    this->q2 = q2;
5: +    this->q3 = q3;
5: @@ -89,4 +88,4 @@
5: -        w_bx_ = 0;
5: -        w_by_ = 0;
5: -        w_bz_ = 0;
5: -    }
5: +    w_bx_ = 0;
5: +    w_by_ = 0;
5: +    w_bz_ = 0;
5: +  }
5: @@ -94,4 +93,5 @@
5: -    void madgwickAHRSupdate(float gx, float gy, float gz,
5: -                            float ax, float ay, float az,
5: -                            float mx, float my, float mz,
5: -                            float dt);
5: +  void madgwickAHRSupdate(
5: +    float gx, float gy, float gz,
5: +    float ax, float ay, float az,
5: +    float mx, float my, float mz,
5: +    float dt);
5: @@ -99,3 +99,4 @@
5: -    void madgwickAHRSupdateIMU(float gx, float gy, float gz,
5: -                               float ax, float ay, float az,
5: -                               float dt);
5: +  void madgwickAHRSupdateIMU(
5: +    float gx, float gy, float gz,
5: +    float ax, float ay, float az,
5: +    float dt);
5: @@ -103,2 +104,3 @@
5: -    void getGravity(float& rx, float& ry, float& rz,
5: -                    float gravity = 9.80665);
5: +  void getGravity(
5: +    float & rx, float & ry, float & rz,
5: +    float gravity = 9.80665);
5: 
5: Code style divergence in file 'include/imu_madgwick/stateless_orientation.hpp':
5: 
5: --- include/imu_madgwick/stateless_orientation.hpp
5: +++ include/imu_madgwick/stateless_orientation.hpp.uncrustify
5: @@ -39 +39 @@
5: -    geometry_msgs::msg::Quaternion& orientation);
5: +    geometry_msgs::msg::Quaternion & orientation);
5: @@ -44 +44 @@
5: -    geometry_msgs::msg::Quaternion& orientation);
5: +    geometry_msgs::msg::Quaternion & orientation);
5: 
5: Code style divergence in file 'include/imu_madgwick/world_frame.hpp':
5: 
5: --- include/imu_madgwick/world_frame.hpp
5: +++ include/imu_madgwick/world_frame.hpp.uncrustify
5: @@ -4,2 +4,3 @@
5: -namespace WorldFrame {
5: -  enum WorldFrame { ENU, NED, NWU };
5: +namespace WorldFrame
5: +{
5: +enum WorldFrame { ENU, NED, NWU };
5: 
5: Code style divergence in file 'src/imu_madgwick/imu.cpp':
5: 
5: --- src/imu_madgwick/imu.cpp
5: +++ src/imu_madgwick/imu.cpp.uncrustify
5: @@ -46 +46,2 @@
5: -  : rclcpp::Node(node_name) {
5: +: rclcpp::Node(node_name)
5: +{
5: @@ -61,2 +62,2 @@
5: -      const geometry_msgs::msg::Vector3& ang_vel = imu_msg_raw->angular_velocity;
5: -      const geometry_msgs::msg::Vector3& lin_acc = imu_msg_raw->linear_acceleration;
5: +      const geometry_msgs::msg::Vector3 & ang_vel = imu_msg_raw->angular_velocity;
5: +      const geometry_msgs::msg::Vector3 & lin_acc = imu_msg_raw->linear_acceleration;
5: @@ -69 +70,3 @@
5: -          RCLCPP_WARN_STREAM(get_logger(), "The IMU seems to be in free fall, cannot determine gravity direction!");
5: +          RCLCPP_WARN_STREAM(
5: +            get_logger(),
5: +            "The IMU seems to be in free fall, cannot determine gravity direction!");
5: @@ -103,2 +106,2 @@
5: -  double q0,q1,q2,q3;
5: -  filter.getOrientation(q0,q1,q2,q3);
5: +  double q0, q1, q2, q3;
5: +  filter.getOrientation(q0, q1, q2, q3);
5: @@ -106 +109 @@
5: -  auto imu_msg = sensor_msgs::msg::Imu(* imu_msg_raw);
5: +  auto imu_msg = sensor_msgs::msg::Imu(*imu_msg_raw);
5: @@ -123 +126 @@
5: -  if(remove_gravity_vector) {
5: +  if (remove_gravity_vector) {
5: @@ -138 +141 @@
5: -  tf2::Matrix3x3(tf2::Quaternion(q1,q2,q3,q0)).getRPY(roll, pitch, yaw);
5: +  tf2::Matrix3x3(tf2::Quaternion(q1, q2, q3, q0)).getRPY(roll, pitch, yaw);
5: 
5: Code style divergence in file 'src/imu_madgwick/imu_filter.cpp':
5: 
5: --- src/imu_madgwick/imu_filter.cpp
5: +++ src/imu_madgwick/imu_filter.cpp.uncrustify
5: @@ -33,2 +33 @@
5: -  union
5: -  {
5: +  union {
5: @@ -46,3 +45,3 @@
5: -static inline void normalizeVector(T& vx, T& vy, T& vz)
5: -{
5: -  T recipNorm = invSqrt (vx * vx + vy * vy + vz * vz);
5: +static inline void normalizeVector(T & vx, T & vy, T & vz)
5: +{
5: +  T recipNorm = invSqrt(vx * vx + vy * vy + vz * vz);
5: @@ -55,3 +54,3 @@
5: -static inline void normalizeQuaternion(T& q0, T& q1, T& q2, T& q3)
5: -{
5: -  T recipNorm = invSqrt (q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
5: +static inline void normalizeQuaternion(T & q0, T & q1, T & q2, T & q3)
5: +{
5: +  T recipNorm = invSqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
5: @@ -65,3 +64,4 @@
5: -    float q0, float q1, float q2, float q3,
5: -    float _2dx, float _2dy, float _2dz,
5: -    float& rx, float& ry, float& rz) {
5: +  float q0, float q1, float q2, float q3,
5: +  float _2dx, float _2dy, float _2dz,
5: +  float & rx, float & ry, float & rz)
5: +{
5: @@ -70,9 +70,9 @@
5: -  rx = _2dx * (0.5f - q2 * q2 - q3 * q3)
5: -     + _2dy * (q0 * q3 + q1 * q2)
5: -     + _2dz * (q1 * q3 - q0 * q2);
5: -  ry = _2dx * (q1 * q2 - q0 * q3)
5: -     + _2dy * (0.5f - q1 * q1 - q3 * q3)
5: -     + _2dz * (q0 * q1 + q2 * q3);
5: -  rz = _2dx * (q0 * q2 + q1 * q3)
5: -     + _2dy * (q2 * q3 - q0 * q1)
5: -     + _2dz * (0.5f - q1 * q1 - q2 * q2);
5: +  rx = _2dx * (0.5f - q2 * q2 - q3 * q3) +
5: +    _2dy * (q0 * q3 + q1 * q2) +
5: +    _2dz * (q1 * q3 - q0 * q2);
5: +  ry = _2dx * (q1 * q2 - q0 * q3) +
5: +    _2dy * (0.5f - q1 * q1 - q3 * q3) +
5: +    _2dz * (q0 * q1 + q2 * q3);
5: +  rz = _2dx * (q0 * q2 + q1 * q3) +
5: +    _2dy * (q2 * q3 - q0 * q1) +
5: +    _2dz * (0.5f - q1 * q1 - q2 * q2);
5: @@ -83,5 +83,5 @@
5: -    float q0, float q1, float q2, float q3,
5: -    float s0, float s1, float s2, float s3,
5: -    float dt, float zeta,
5: -    float& w_bx, float& w_by, float& w_bz,
5: -    float& gx, float& gy, float& gz)
5: +  float q0, float q1, float q2, float q3,
5: +  float s0, float s1, float s2, float s3,
5: +  float dt, float zeta,
5: +  float & w_bx, float & w_by, float & w_bz,
5: +  float & gx, float & gy, float & gz)
5: @@ -104,3 +104,3 @@
5: -    float q0, float q1, float q2, float q3,
5: -    float gx, float gy, float gz,
5: -    float& qDot1, float& qDot2, float& qDot3, float& qDot4)
5: +  float q0, float q1, float q2, float q3,
5: +  float gx, float gy, float gz,
5: +  float & qDot1, float & qDot2, float & qDot3, float & qDot4)
5: @@ -117,4 +117,4 @@
5: -    float q0, float q1, float q2, float q3,
5: -    float _2dx, float _2dy, float _2dz,
5: -    float mx, float my, float mz,
5: -    float& s0, float& s1, float& s2, float& s3)
5: +  float q0, float q1, float q2, float q3,
5: +  float _2dx, float _2dy, float _2dz,
5: +  float mx, float my, float mz,
5: +  float & s0, float & s1, float & s2, float & s3)
5: @@ -126 +126 @@
5: -  rotateAndScaleVector(q0,q1,q2,q3, _2dx, _2dy, _2dz, f0, f1, f2);
5: +  rotateAndScaleVector(q0, q1, q2, q3, _2dx, _2dy, _2dz, f0, f1, f2);
5: @@ -135,12 +135,12 @@
5: -  s0 += (_2dy * q3 - _2dz * q2) * f0
5: -      + (-_2dx * q3 + _2dz * q1) * f1
5: -      + (_2dx * q2 - _2dy * q1) * f2;
5: -  s1 += (_2dy * q2 + _2dz * q3) * f0
5: -      + (_2dx * q2 - 2.0f * _2dy * q1 + _2dz * q0) * f1
5: -      + (_2dx * q3 - _2dy * q0 - 2.0f * _2dz * q1) * f2;
5: -  s2 += (-2.0f * _2dx * q2 + _2dy * q1 - _2dz * q0) * f0
5: -      + (_2dx * q1 + _2dz * q3) * f1
5: -      + (_2dx * q0 + _2dy * q3 - 2.0f * _2dz * q2) * f2;
5: -  s3 += (-2.0f * _2dx * q3 + _2dy * q0 + _2dz * q1) * f0
5: -      + (-_2dx * q0 - 2.0f * _2dy * q3 + _2dz * q2) * f1
5: -      + (_2dx * q1 + _2dy * q2) * f2;
5: +  s0 += (_2dy * q3 - _2dz * q2) * f0 +
5: +    (-_2dx * q3 + _2dz * q1) * f1 +
5: +    (_2dx * q2 - _2dy * q1) * f2;
5: +  s1 += (_2dy * q2 + _2dz * q3) * f0 +
5: +    (_2dx * q2 - 2.0f * _2dy * q1 + _2dz * q0) * f1 +
5: +    (_2dx * q3 - _2dy * q0 - 2.0f * _2dz * q1) * f2;
5: +  s2 += (-2.0f * _2dx * q2 + _2dy * q1 - _2dz * q0) * f0 +
5: +    (_2dx * q1 + _2dz * q3) * f1 +
5: +    (_2dx * q0 + _2dy * q3 - 2.0f * _2dz * q2) * f2;
5: +  s3 += (-2.0f * _2dx * q3 + _2dy * q0 + _2dz * q1) * f0 +
5: +    (-_2dx * q0 - 2.0f * _2dy * q3 + _2dz * q2) * f1 +
5: +    (_2dx * q1 + _2dy * q2) * f2;
5: @@ -150,3 +150,3 @@
5: -    float q0, float q1, float q2, float q3,
5: -    float mx, float my, float mz,
5: -    float& _2bxy, float& _2bz)
5: +  float q0, float q1, float q2, float q3,
5: +  float mx, float my, float mz,
5: +  float & _2bxy, float & _2bz)
5: @@ -158 +158 @@
5: -  _2bxy = 4.0f * sqrt (hx * hx + hy * hy);
5: +  _2bxy = 4.0f * sqrt(hx * hx + hy * hy);
5: @@ -164,4 +164,4 @@
5: -ImuFilter::ImuFilter() :
5: -    gain_ (0.0), zeta_ (0.0), world_frame_(WorldFrame::ENU),
5: -    q0(1.0), q1(0.0), q2(0.0), q3(0.0),
5: -    w_bx_(0.0), w_by_(0.0), w_bz_(0.0)
5: +ImuFilter::ImuFilter()
5: +: gain_(0.0), zeta_(0.0), world_frame_(WorldFrame::ENU),
5: +  q0(1.0), q1(0.0), q2(0.0), q3(0.0),
5: +  w_bx_(0.0), w_by_(0.0), w_bz_(0.0)
5: @@ -176,4 +176,4 @@
5: -    float gx, float gy, float gz,
5: -    float ax, float ay, float az,
5: -    float mx, float my, float mz,
5: -    float dt)
5: +  float gx, float gy, float gz,
5: +  float ax, float ay, float az,
5: +  float mx, float my, float mz,
5: +  float dt)
5: @@ -186,2 +186 @@
5: -  if (!std::isfinite(mx) || !std::isfinite(my) || !std::isfinite(mz))
5: -  {
5: +  if (!std::isfinite(mx) || !std::isfinite(my) || !std::isfinite(mz)) {
5: @@ -193,2 +192 @@
5: -  if (!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
5: -  {
5: +  if (!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f))) {
5: @@ -212 +210 @@
5: -        addGradientDescentStep(q0,q1,q2,q3, _2bxy, 0.0, _2bz, mx, my, mz, s0, s1, s2, s3);
5: +        addGradientDescentStep(q0, q1, q2, q3, _2bxy, 0.0, _2bz, mx, my, mz, s0, s1, s2, s3);
5: @@ -219 +217 @@
5: -        addGradientDescentStep(q0,q1,q2,q3, _2bxy, 0.0, _2bz, mx, my, mz, s0, s1, s2, s3);
5: +        addGradientDescentStep(q0, q1, q2, q3, _2bxy, 0.0, _2bz, mx, my, mz, s0, s1, s2, s3);
5: @@ -235,0 +234,55 @@
5: +
5: +    // Apply feedback step
5: +    qDot1 -= gain_ * s0;
5: +    qDot2 -= gain_ * s1;
5: +    qDot3 -= gain_ * s2;
5: +    qDot4 -= gain_ * s3;
5: +  } else {
5: +    orientationChangeFromGyro(q0, q1, q2, q3, gx, gy, gz, qDot1, qDot2, qDot3, qDot4);
5: +  }
5: +
5: +  // Integrate rate of change of quaternion to yield quaternion
5: +  q0 += qDot1 * dt;
5: +  q1 += qDot2 * dt;
5: +  q2 += qDot3 * dt;
5: +  q3 += qDot4 * dt;
5: +
5: +  // Normalise quaternion
5: +  normalizeQuaternion(q0, q1, q2, q3);
5: +}
5: +
5: +void ImuFilter::madgwickAHRSupdateIMU(
5: +  float gx, float gy, float gz,
5: +  float ax, float ay, float az,
5: +  float dt)
5: +{
5: +  float s0, s1, s2, s3;
5: +  float qDot1, qDot2, qDot3, qDot4;
5: +
5: +  // Rate of change of quaternion from gyroscope
5: +  orientationChangeFromGyro(q0, q1, q2, q3, gx, gy, gz, qDot1, qDot2, qDot3, qDot4);
5: +
5: +  // Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
5: +  if (!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f))) {
5: +    // Normalise accelerometer measurement
5: +    normalizeVector(ax, ay, az);
5: +
5: +    // Gradient decent algorithm corrective step
5: +    s0 = 0.0;  s1 = 0.0;  s2 = 0.0;  s3 = 0.0;
5: +    switch (world_frame_) {
5: +      case WorldFrame::NED:
5: +        // Gravity: [0, 0, -1]
5: +        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, -2.0, ax, ay, az, s0, s1, s2, s3);
5: +        break;
5: +      case WorldFrame::NWU:
5: +        // Gravity: [0, 0, 1]
5: +        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, 2.0, ax, ay, az, s0, s1, s2, s3);
5: +        break;
5: +      default:
5: +      case WorldFrame::ENU:
5: +        // Gravity: [0, 0, 1]
5: +        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, 2.0, ax, ay, az, s0, s1, s2, s3);
5: +        break;
5: +    }
5: +
5: +    normalizeQuaternion(s0, s1, s2, s3);
5: @@ -243,4 +295,0 @@
5: -  else
5: -  {
5: -    orientationChangeFromGyro(q0, q1, q2, q3, gx, gy, gz, qDot1, qDot2, qDot3, qDot4);
5: -  }
5: @@ -258,42 +307,29 @@
5: -void ImuFilter::madgwickAHRSupdateIMU(
5: -    float gx, float gy, float gz,
5: -    float ax, float ay, float az,
5: -    float dt)
5: -{
5: -  float s0, s1, s2, s3;
5: -  float qDot1, qDot2, qDot3, qDot4;
5: -
5: -  // Rate of change of quaternion from gyroscope
5: -  orientationChangeFromGyro (q0, q1, q2, q3, gx, gy, gz, qDot1, qDot2, qDot3, qDot4);
5: -
5: -  // Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
5: -  if (!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
5: -  {
5: -    // Normalise accelerometer measurement
5: -    normalizeVector(ax, ay, az);
5: -
5: -    // Gradient decent algorithm corrective step
5: -    s0 = 0.0;  s1 = 0.0;  s2 = 0.0;  s3 = 0.0;
5: -    switch (world_frame_) {
5: -      case WorldFrame::NED:
5: -        // Gravity: [0, 0, -1]
5: -        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, -2.0, ax, ay, az, s0, s1, s2, s3);
5: -        break;
5: -      case WorldFrame::NWU:
5: -        // Gravity: [0, 0, 1]
5: -        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, 2.0, ax, ay, az, s0, s1, s2, s3);
5: -        break;
5: -      default:
5: -      case WorldFrame::ENU:
5: -        // Gravity: [0, 0, 1]
5: -        addGradientDescentStep(q0, q1, q2, q3, 0.0, 0.0, 2.0, ax, ay, az, s0, s1, s2, s3);
5: -        break;
5: -    }
5: -
5: -    normalizeQuaternion(s0, s1, s2, s3);
5: -
5: -    // Apply feedback step
5: -    qDot1 -= gain_ * s0;
5: -    qDot2 -= gain_ * s1;
5: -    qDot3 -= gain_ * s2;
5: -    qDot4 -= gain_ * s3;
5: +
5: +void ImuFilter::getGravity(
5: +  float & rx, float & ry, float & rz,
5: +  float gravity)
5: +{
5: +  // Estimate gravity vector from current orientation
5: +  switch (world_frame_) {
5: +    case WorldFrame::NED:
5: +      // Gravity: [0, 0, -1]
5: +      rotateAndScaleVector(
5: +        q0, q1, q2, q3,
5: +        0.0, 0.0, -2.0 * gravity,
5: +        rx, ry, rz);
5: +      break;
5: +    case WorldFrame::NWU:
5: +      // Gravity: [0, 0, 1]
5: +      rotateAndScaleVector(
5: +        q0, q1, q2, q3,
5: +        0.0, 0.0, 2.0 * gravity,
5: +        rx, ry, rz);
5: +      break;
5: +    default:
5: +    case WorldFrame::ENU:
5: +      // Gravity: [0, 0, 1]
5: +      rotateAndScaleVector(
5: +        q0, q1, q2, q3,
5: +        0.0, 0.0, 2.0 * gravity,
5: +        rx, ry, rz);
5: +      break;
5: @@ -301,38 +337 @@
5: -
5: -  // Integrate rate of change of quaternion to yield quaternion
5: -  q0 += qDot1 * dt;
5: -  q1 += qDot2 * dt;
5: -  q2 += qDot3 * dt;
5: -  q3 += qDot4 * dt;
5: -
5: -  // Normalise quaternion
5: -  normalizeQuaternion (q0, q1, q2, q3);
5: -}
5: -
5: -
5: -void ImuFilter::getGravity(float& rx, float& ry, float& rz,
5: -    float gravity)
5: -{
5: -    // Estimate gravity vector from current orientation
5: -    switch (world_frame_) {
5: -      case WorldFrame::NED:
5: -        // Gravity: [0, 0, -1]
5: -        rotateAndScaleVector(q0, q1, q2, q3,
5: -            0.0, 0.0, -2.0*gravity,
5: -            rx, ry, rz);
5: -        break;
5: -      case WorldFrame::NWU:
5: -        // Gravity: [0, 0, 1]
5: -        rotateAndScaleVector(q0, q1, q2, q3,
5: -            0.0, 0.0, 2.0*gravity,
5: -            rx, ry, rz);
5: -        break;
5: -      default:
5: -      case WorldFrame::ENU:
5: -        // Gravity: [0, 0, 1]
5: -        rotateAndScaleVector(q0, q1, q2, q3,
5: -            0.0, 0.0, 2.0*gravity,
5: -            rx, ry, rz);
5: -        break;
5: -    }
5: -}
5: +}
5: 
5: Code style divergence in file 'src/imu_madgwick/stateless_orientation.cpp':
5: 
5: --- src/imu_madgwick/stateless_orientation.cpp
5: +++ src/imu_madgwick/stateless_orientation.cpp.uncrustify
5: @@ -32,6 +32,7 @@
5: -      T ax, T ay, T az,
5: -      T bx, T by, T bz,
5: -      T& rx, T& ry, T& rz) {
5: -  rx = ay*bz - az*by;
5: -  ry = az*bx - ax*bz;
5: -  rz = ax*by - ay*bx;
5: +  T ax, T ay, T az,
5: +  T bx, T by, T bz,
5: +  T & rx, T & ry, T & rz)
5: +{
5: +  rx = ay * bz - az * by;
5: +  ry = az * bx - ax * bz;
5: +  rz = ax * by - ay * bx;
5: @@ -42,2 +43,3 @@
5: -static inline T normalizeVector(T& vx, T& vy, T& vz) {
5: -  T norm = sqrt(vx*vx + vy*vy + vz*vz);
5: +static inline T normalizeVector(T & vx, T & vy, T & vz)
5: +{
5: +  T norm = sqrt(vx * vx + vy * vy + vz * vz);
5: @@ -57 +59,2 @@
5: -  geometry_msgs::msg::Quaternion& orientation) {
5: +  geometry_msgs::msg::Quaternion & orientation)
5: +{
5: @@ -151 +154,2 @@
5: -  geometry_msgs::msg::Quaternion& orientation) {
5: +  geometry_msgs::msg::Quaternion & orientation)
5: +{
5: @@ -159,3 +163,3 @@
5: -      E.x = A.y;
5: -      E.y = A.x;
5: -      E.z = 0.0;
5: +    E.x = A.y;
5: +    E.y = A.x;
5: +    E.z = 0.0;
5: @@ -163,3 +167,3 @@
5: -      E.x = 0.0;
5: -      E.y = A.z;
5: -      E.z = A.y;
5: +    E.x = 0.0;
5: +    E.y = A.z;
5: +    E.z = A.y;
5: @@ -167,2 +171,2 @@
5: -      // free fall
5: -      return false;
5: +    // free fall
5: +    return false;
5: 
5: 6 files with code style divergence
5: No code style divergence in file 'include/imu_madgwick/imu.hpp'
5: 
5: -- run_test.py: return code 1
5: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/uncrustify.xunit.xml'
5/6 Test #5: uncrustify .......................***Failed    1.02 sec
test 6
    Start 6: xmllint

6: Test command: /usr/bin/python3 "-u" "/opt/ros/foxy/share/ament_cmake_test/cmake/run_test.py" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/xmllint.xunit.xml" "--package-name" "imu_madgwick" "--output-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/ament_xmllint/xmllint.txt" "--command" "/opt/ros/foxy/bin/ament_xmllint" "--xunit-file" "/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/xmllint.xunit.xml"
6: Test timeout computed to be: 60
6: -- run_test.py: invoking following command in '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/src/imu_madgwick':
6:  - /opt/ros/foxy/bin/ament_xmllint --xunit-file /home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/xmllint.xunit.xml
6: File 'package.xml' is valid
6: 
6: No problems found
6: -- run_test.py: return code 0
6: -- run_test.py: verify result file '/home/maroqi/Projects/RobotProjects/imu-test/imu_ws/build/imu_madgwick/test_results/imu_madgwick/xmllint.xunit.xml'
6/6 Test #6: xmllint ..........................   Passed    7.95 sec

50% tests passed[0;0m, [0;31m3 tests failed[0;0m out of 6

Label Time Summary:
copyright     =   0.93 sec*proc (1 test)
cppcheck      =   0.92 sec*proc (1 test)
cpplint       =   1.31 sec*proc (1 test)
lint_cmake    =   0.75 sec*proc (1 test)
linter        =  12.88 sec*proc (6 tests)
uncrustify    =   1.02 sec*proc (1 test)
xmllint       =   7.95 sec*proc (1 test)

Total Test time (real) =  12.90 sec

The following tests FAILED:
	[0;31m  1 - copyright (Failed)[0;0m
	[0;31m  3 - cpplint (Failed)[0;0m
	[0;31m  5 - uncrustify (Failed)[0;0m
Errors while running CTest
